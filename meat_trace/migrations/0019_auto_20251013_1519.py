# Generated by Django 5.2.6 on 2025-10-13 12:19

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('meat_trace', '0018_remove_animal_farm_name_animal_abbatoir_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProcessingUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='userprofile',
            name='processing_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_profiles', to='meat_trace.processingunit'),
        ),
        migrations.AlterField(
            model_name='product',
            name='processing_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='meat_trace.processingunit'),
        ),
        migrations.CreateModel(
            name='ProcessingUnitUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('manager', 'Manager'), ('supervisor', 'Supervisor'), ('worker', 'Worker'), ('quality_control', 'Quality Control')], default='worker', max_length=20)),
                ('permissions', models.CharField(choices=[('read', 'Read Only'), ('write', 'Read/Write'), ('admin', 'Full Admin')], default='write', max_length=20)),
                ('invited_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('processing_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='meat_trace.processingunit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_unit_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'processing_unit')},
            },
        ),
        # Data migration to create processing units and update references
        migrations.RunSQL(
            """
            -- Create processing units for existing ProcessingUnit role users
            INSERT INTO meat_trace_processingunit (name, description, contact_email, created_at, updated_at)
            SELECT
                username || ' Processing Unit' as name,
                'Processing unit for ' || username as description,
                email as contact_email,
                datetime('now') as created_at,
                datetime('now') as updated_at
            FROM auth_user
            WHERE id IN (
                SELECT user_id FROM meat_trace_userprofile WHERE role = 'ProcessingUnit'
            );

            -- Update user profiles to reference processing units
            UPDATE meat_trace_userprofile
            SET processing_unit_id = (
                SELECT pu.id
                FROM meat_trace_processingunit pu
                WHERE pu.name = (SELECT username || ' Processing Unit' FROM auth_user WHERE id = meat_trace_userprofile.user_id)
            )
            WHERE role = 'ProcessingUnit';

            -- Create ProcessingUnitUser links
            INSERT INTO meat_trace_processingunituser (user_id, processing_unit_id, role, permissions, invited_at, joined_at, is_active)
            SELECT
                up.user_id,
                up.processing_unit_id,
                'owner' as role,
                'admin' as permissions,
                datetime('now') as invited_at,
                datetime('now') as joined_at,
                1 as is_active
            FROM meat_trace_userprofile up
            WHERE up.role = 'ProcessingUnit' AND up.processing_unit_id IS NOT NULL;

            -- Update products to reference processing units instead of users
            UPDATE meat_trace_product
            SET processing_unit_id = (
                SELECT pu.id
                FROM meat_trace_processingunit pu
                INNER JOIN auth_user au ON pu.name = au.username || ' Processing Unit'
                WHERE au.id = meat_trace_product.processing_unit_id
            )
            WHERE processing_unit_id IS NOT NULL;
            """,
            reverse_sql=migrations.RunSQL.noop
        ),
    ]
