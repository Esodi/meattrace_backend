# Generated by Django 5.2.6 on 2025-10-20 08:48

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('meat_trace', '0032_alter_carcassmeasurement_front_legs_weight_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('manual', 'Manual Only')], default='daily', max_length=10)),
                ('backup_type', models.CharField(choices=[('full', 'Full Backup'), ('incremental', 'Incremental Backup'), ('differential', 'Differential Backup')], default='full', max_length=15)),
                ('scheduled_time', models.TimeField()),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('include_database', models.BooleanField(default=True)),
                ('include_files', models.BooleanField(default=True)),
                ('include_media', models.BooleanField(default=True)),
                ('retention_days', models.PositiveIntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('last_status', models.CharField(blank=True, choices=[('success', 'Success'), ('failed', 'Failed'), ('running', 'Running')], max_length=20, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['next_run'],
            },
        ),
        migrations.CreateModel(
            name='SystemHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(choices=[('database', 'Database'), ('api', 'API Services'), ('file_storage', 'File Storage'), ('qr_generation', 'QR Code Generation'), ('email', 'Email Service'), ('notifications', 'Notification System'), ('backup', 'Backup System')], max_length=20)),
                ('status', models.CharField(choices=[('healthy', 'Healthy'), ('warning', 'Warning'), ('critical', 'Critical'), ('offline', 'Offline')], default='healthy', max_length=20)),
                ('response_time', models.DecimalField(blank=True, decimal_places=3, help_text='Response time in seconds', max_digits=8, null=True)),
                ('uptime_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Uptime percentage', max_digits=5, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('last_check', models.DateTimeField(default=django.utils.timezone.now)),
                ('next_check', models.DateTimeField(blank=True, null=True)),
                ('warning_threshold', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('critical_threshold', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['component'],
                'unique_together': {('component',)},
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('cert_type', models.CharField(choices=[('haccp', 'HACCP'), ('iso22000', 'ISO 22000'), ('halal', 'Halal Certification'), ('organic', 'Organic Certification'), ('gmp', 'Good Manufacturing Practice'), ('traceability', 'Traceability Certification'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('pending', 'Pending Renewal'), ('suspended', 'Suspended'), ('revoked', 'Revoked')], default='active', max_length=20)),
                ('issuing_authority', models.CharField(max_length=100)),
                ('certificate_number', models.CharField(max_length=100, unique=True)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processing_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meat_trace.processingunit')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meat_trace.shop')),
            ],
            options={
                'ordering': ['-expiry_date'],
                'indexes': [models.Index(fields=['status', 'expiry_date'], name='meat_trace__status_6dde5d_idx'), models.Index(fields=['cert_type', 'status'], name='meat_trace__cert_ty_3b0809_idx'), models.Index(fields=['processing_unit', 'status'], name='meat_trace__process_81b47e_idx'), models.Index(fields=['shop', 'status'], name='meat_trace__shop_id_881e36_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('audit_type', models.CharField(choices=[('internal', 'Internal Audit'), ('external', 'External Audit'), ('regulatory', 'Regulatory Inspection'), ('quality_control', 'Quality Control Check'), ('traceability', 'Traceability Verification')], max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('auditor', models.CharField(blank=True, max_length=100, null=True)),
                ('auditor_organization', models.CharField(blank=True, max_length=100, null=True)),
                ('scheduled_date', models.DateTimeField()),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, help_text='Audit score (0-100)', max_digits=5, null=True)),
                ('findings', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('follow_up_notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processing_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meat_trace.processingunit')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meat_trace.shop')),
            ],
            options={
                'ordering': ['-scheduled_date'],
                'indexes': [models.Index(fields=['status', 'scheduled_date'], name='meat_trace__status_047302_idx'), models.Index(fields=['audit_type', 'status'], name='meat_trace__audit_t_13dc20_idx'), models.Index(fields=['processing_unit', 'status'], name='meat_trace__process_8d0110_idx'), models.Index(fields=['shop', 'status'], name='meat_trace__shop_id_e293b7_idx')],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('metric_type', models.CharField(choices=[('processing_efficiency', 'Processing Efficiency'), ('yield_rate', 'Yield Rate'), ('transfer_success', 'Transfer Success Rate'), ('inventory_turnover', 'Inventory Turnover'), ('order_fulfillment', 'Order Fulfillment Time'), ('quality_score', 'Quality Score'), ('compliance_rate', 'Compliance Rate')], max_length=30)),
                ('value', models.DecimalField(decimal_places=4, max_digits=10)),
                ('unit', models.CharField(blank=True, max_length=20, null=True)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('target_value', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('warning_threshold', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('critical_threshold', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processing_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meat_trace.processingunit')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meat_trace.shop')),
            ],
            options={
                'ordering': ['-period_end'],
                'indexes': [models.Index(fields=['metric_type', 'period_end'], name='meat_trace__metric__0e2428_idx'), models.Index(fields=['processing_unit', 'metric_type'], name='meat_trace__process_0a082f_idx'), models.Index(fields=['shop', 'metric_type'], name='meat_trace__shop_id_0a8a2f_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('failed_login', 'Failed Login'), ('password_change', 'Password Change'), ('permission_change', 'Permission Change'), ('suspicious_activity', 'Suspicious Activity'), ('data_access', 'Data Access'), ('api_access', 'API Access'), ('file_access', 'File Access')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=10)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('resource', models.CharField(blank=True, help_text='Resource that was accessed', max_length=200, null=True)),
                ('action', models.CharField(blank=True, help_text='Action performed', max_length=100, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('processing_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='meat_trace.processingunit')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='meat_trace.shop')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['event_type', 'timestamp'], name='meat_trace__event_t_eb5e32_idx'), models.Index(fields=['severity', 'timestamp'], name='meat_trace__severit_3682ff_idx'), models.Index(fields=['user', 'timestamp'], name='meat_trace__user_id_5b71ca_idx'), models.Index(fields=['ip_address', 'timestamp'], name='meat_trace__ip_addr_28e650_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('alert_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical'), ('maintenance', 'Maintenance')], default='info', max_length=20)),
                ('category', models.CharField(choices=[('system', 'System'), ('security', 'Security'), ('performance', 'Performance'), ('compliance', 'Compliance'), ('inventory', 'Inventory'), ('supply_chain', 'Supply Chain')], default='system', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('auto_resolve', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('processing_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meat_trace.processingunit')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meat_trace.shop')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['is_active', 'alert_type'], name='meat_trace__is_acti_efc92e_idx'), models.Index(fields=['category', 'created_at'], name='meat_trace__categor_7922f0_idx'), models.Index(fields=['processing_unit', 'is_active'], name='meat_trace__process_8ef644_idx'), models.Index(fields=['shop', 'is_active'], name='meat_trace__shop_id_07f2a4_idx')],
            },
        ),
        migrations.CreateModel(
            name='TransferRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('animal_transfer', 'Animal Transfer'), ('product_transfer', 'Product Transfer'), ('part_transfer', 'Slaughter Part Transfer')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('approval_required', models.BooleanField(default=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('animal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meat_trace.animal')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_transfers', to=settings.AUTH_USER_MODEL)),
                ('from_processing_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transfers', to='meat_trace.processingunit')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meat_trace.product')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_requests', to=settings.AUTH_USER_MODEL)),
                ('slaughter_parts', models.ManyToManyField(blank=True, to='meat_trace.slaughterpart')),
                ('to_processing_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transfers', to='meat_trace.processingunit')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='meat_trace__status_02d737_idx'), models.Index(fields=['request_type', 'status'], name='meat_trace__request_86d03d_idx'), models.Index(fields=['from_processing_unit', 'status'], name='meat_trace__from_pr_28f6f8_idx'), models.Index(fields=['to_processing_unit', 'status'], name='meat_trace__to_proc_3559e1_idx')],
            },
        ),
    ]
